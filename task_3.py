"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

company = {
    'microsoft': 2000,
    'adidas': 1500,
    'puma': 1760,
    'facebook': 5000,
    'vk': 4500,
    'iphone': 5500,
    'samsung': 4500
}

# 1 вармант O(N*logN)

list_company = list(company.items())
list_company.sort(key = lambda i: i[1], reverse = True)
for i in range(3):
    print(list_company[i][0], ':', list_company[i][1])

# 2 вариант O(n)

def func_max(list_input):
    input_max = {}
    list_dict = dict(list_input)
    for i in range (3):
        maximum = max(list_dict.items(), key = lambda k_v: k_v[1])
        del list_dict[maximum[0]]
        input_max[maximum[0]] = maximum[1]
    return input_max

print(func_max(company))

# лучший вариант - второй, так как имеет наименьшую сложность и не меняет исходный словарь